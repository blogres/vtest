import{_ as o}from"./plugin-vue_export-helper-x3n3nnut.js";import{r as i,o as l,c as r,b as t,e as n,d as a,a as s}from"./app-JabzxadU.js";const p="/vtest/assets/image-1-1cNQDgyp.png",d="/vtest/assets/image-2-qnX4pmJK.png",c="/vtest/assets/image-3-v83JbU2q.png",g="/vtest/assets/image-4-4_wJ1J0o.png",u="/vtest/assets/image-5-z83f4a7W.png",h="/vtest/assets/image-6--U31u5fU.png",m="/vtest/assets/image-7-UlY8Kd1-.png",f="/vtest/assets/image-8-qMweY2uC.png",y="/vtest/assets/image-9-gnknpiFp.png",b="/vtest/assets/image-10-wgYnCaDk.png",k="/vtest/assets/image-Stage-JIpx2MtW.png",v="/vtest/assets/image-Stage-ArkTS-4ss6mbGu.png",x="/vtest/assets/image-FA-Wr8Sg6Pl.png",_="/vtest/assets/image-FA-ArkTS-8-f4G9o8_L.png",j="/vtest/assets/image-FA-ArkTS-9-JD4bLJim.png",q={},A=s('<p><strong>HarmonyOS第一课</strong>：包含了<em>Hello World</em>、ArkTS、应用程序框架、构建更加丰富的页面、给应用添加动画、从网络获取数据、保存应用数据、给应用添加通知和提醒、应用服务上架等知识。</p><h1 id="harmonyos第一课之工程介绍" tabindex="-1"><a class="header-anchor" href="#harmonyos第一课之工程介绍"><span>HarmonyOS第一课之工程介绍</span></a></h1><h2 id="技术架构" tabindex="-1"><a class="header-anchor" href="#技术架构"><span>技术架构</span></a></h2><figure><img src="'+p+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h2 id="创建项目-主要部分" tabindex="-1"><a class="header-anchor" href="#创建项目-主要部分"><span>创建项目(主要部分)</span></a></h2><figure><img src="'+d+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><figure><img src="'+c+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h2 id="了解基本工程目录" tabindex="-1"><a class="header-anchor" href="#了解基本工程目录"><span>了解基本工程目录</span></a></h2><h3 id="工程级目录" tabindex="-1"><a class="header-anchor" href="#工程级目录"><span>工程级目录</span></a></h3><figure><img src="'+g+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>其中详细如下：</p>',11),S=t("li",null,[t("strong",null,"AppScope"),n("：中存放应用全局所需要的资源文件。")],-1),w=t("li",null,[t("strong",null,"entry"),n("：是应用的主模块，存放HarmonyOS应用的代码、资源等。")],-1),z=t("strong",null,"oh_modules",-1),P={href:"https://developer.huawei.com/consumer/cn/doc/harmonyos-guides-V2/project_overview-0000001053822398-V2",target:"_blank",rel:"noopener noreferrer"},H=t("li",null,[t("strong",null,"build-profile.json5"),n("：是工程级配置信息，包括签名、产品配置等。")],-1),M=t("li",null,[t("strong",null,"hvigorfile.ts"),n("：是工程级编译构建任务脚本，hvigor是基于任务管理机制实现的一款全新的自动化构建工具，主要提供任务注册编排，工程模型管理、配置管理等核心能力。")],-1),V=t("li",null,[t("strong",null,"oh-package.json5"),n("：是工程级依赖配置文件，用于记录引入包的配置信息。")],-1),I=s('<p>在AppScope ，其中有<em>resources</em>文件夹和配置文件<em>app.json5</em>。<code>AppScope&gt;resources&gt;base</code> 中包含element和media两个文件夹，</p><ul><li><strong>element</strong>：文件夹主要存放公共的字符串、布局文件等资源。</li><li><strong>media</strong>：存放全局公共的多媒体资源文件。</li></ul><figure><img src="'+u+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h3 id="模块级目录" tabindex="-1"><a class="header-anchor" href="#模块级目录"><span>模块级目录</span></a></h3><figure><img src="'+h+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>',5),T=s("<li><strong>entry</strong>：应用/服务模块，编译构建生成一个HAP。</li><li><strong>entry &gt; src &gt; main &gt; module.json5</strong>：Stage模型模块配置文件。具体介绍参考下面的 <code>module.json5</code> 目录级</li><li><strong>entry &gt; src &gt; main &gt; ets</strong>：用于存放ArkTS源码。</li><li><strong>entry &gt; src &gt; main &gt; ets &gt; entryability</strong>：应用/服务的入口，存放ability文件，用于当前ability应用逻辑和生命周期管理。</li><li><strong>entry &gt; src &gt; main &gt; ets &gt; pages</strong>：存放UI界面相关代码文件，初始会生成一个Index页面。</li>",5),E=t("strong",null,"entry > src > main > resources",-1),F={href:"https://developer.huawei.com/consumer/cn/doc/harmonyos-guides-V2/resource-categories-and-access-0000001544463977-V2",target:"_blank",rel:"noopener noreferrer"},W=s('<table><thead><tr><th>资源目录</th><th>资源文件说明</th></tr></thead><tbody><tr><td>base&gt;element</td><td>包括字符串、整型数、颜色、样式等资源的json文件。每个资源均由json格式进行定义，例如： boolean.json：布尔型 color.json：颜色 float.json：浮点型 intarray.json：整型数组 integer.json：整型 pattern.json：样式 plural.json：复数形式 strarray.json：字符串数组 string.json：字符串值</td></tr><tr><td>base&gt;media</td><td>多媒体文件，如图形、视频、音频等文件，支持的文件格式包括：<strong>.png</strong>、<strong>.gif</strong>、<strong>.mp3</strong>、<strong>.mp4</strong>等。</td></tr><tr><td>rawfile</td><td>用于存储任意格式的原始资源文件。rawfile不会根据设备的状态去匹配不同的资源，需要指定文件路径和文件名进行引用。</td></tr></tbody></table><figure><img src="'+m+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><ul><li><strong>entry &gt; src &gt; ohosTest</strong>：是单元测试目录。</li><li><strong>entry &gt; build-profile.json5</strong>：是模块级配置信息，包括编译构建配置项。</li><li><strong>entry &gt; hvigorfile.ts</strong>：文件是模块级编译构建任务脚本。</li><li><strong>entry &gt; oh-package.json5</strong>：是模块级依赖配置信息文件，配置三方包声明文件的入口及包名。</li></ul><h3 id="app-json5" tabindex="-1"><a class="header-anchor" href="#app-json5"><span>app.json5</span></a></h3><p><code>AppScope&gt;app.json5</code></p><figure><img src="'+f+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>主要包含以下内容：</p><ul><li>应用的全局配置信息，包含应用的包名、开发厂商、版本号等基本信息。</li><li>特定设备类型的配置信息。</li></ul><p>其中配置信息如下：</p><ul><li>bundleName：包名。</li><li>vendor：应用程序供应商。</li><li>versionCode：用于区分应用版本。</li><li>versionName：版本号。</li><li>icon：对应于应用的显示图标。</li><li>label：应用名。</li></ul><h3 id="module-json5-stage-模型" tabindex="-1"><a class="header-anchor" href="#module-json5-stage-模型"><span>module.json5(Stage 模型)</span></a></h3><p><code>entry&gt;src&gt;main&gt;module.json5</code> 是 Stage 模型模块配置文件，主要包含HAP的配置信息、应用在具体设备上的配置信息以及应用的全局配置信息。</p><figure><img src="'+y+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>主要包含以下内容：</p><ul><li>Module的基本配置信息，例如Module名称、类型、描述、支持的设备类型等基本信息。</li><li>应用组件信息，包含 <code>UIAbility</code> 组件和 <code>ExtensionAbility</code> 组件的描述信息。</li><li>应用运行过程中所需的权限信息。</li></ul><p>其中module对应的是模块的配置信息，一个模块对应一个打包后的hap包，hap包全称是<code>HarmonyOS Ability Package</code>，其中包含了ability、第三方库、资源和配置文件。其具体属性及其描述可以参照下表1。</p><p><strong>表1 module.json5默认配置属性及描述</strong></p><table><thead><tr><th style="text-align:left;">属性</th><th style="text-align:left;">描述</th></tr></thead><tbody><tr><td style="text-align:left;">name</td><td style="text-align:left;">该标签标识当前module的名字，module打包成hap后，表示hap的名称，标签值采用字符串表示（最大长度31个字节），该名称在整个应用要唯一。</td></tr><tr><td style="text-align:left;">type</td><td style="text-align:left;">表示模块的类型，类型有三种，分别是entry、feature和har。</td></tr><tr><td style="text-align:left;">srcEntry</td><td style="text-align:left;">当前模块的入口文件路径。</td></tr><tr><td style="text-align:left;">description</td><td style="text-align:left;">当前模块的描述信息。</td></tr><tr><td style="text-align:left;">mainElement</td><td style="text-align:left;">该标签标识hap的入口ability名称或者extension名称。只有配置为mainElement的ability或者extension才允许在服务中心露出。</td></tr><tr><td style="text-align:left;">deviceTypes</td><td style="text-align:left;">该标签标识hap可以运行在哪类设备上，标签值采用字符串数组的表示。</td></tr><tr><td style="text-align:left;">deliveryWithInstall</td><td style="text-align:left;">标识当前Module是否在用户主动安装的时候安装，表示该Module对应的HAP是否跟随应用一起安装。- true：主动安装时安装。- false：主动安装时不安装。</td></tr><tr><td style="text-align:left;">installationFree</td><td style="text-align:left;">标识当前Module是否支持免安装特性。- true：表示支持免安装特性，且符合免安装约束。- false：表示不支持免安装特性。</td></tr><tr><td style="text-align:left;">pages</td><td style="text-align:left;">对应的是main_pages.json文件，用于配置ability中用到的page信息。</td></tr><tr><td style="text-align:left;">abilities</td><td style="text-align:left;">是一个数组，存放当前模块中所有的ability元能力的配置信息，其中可以有多个ability。</td></tr></tbody></table><p><strong>表2 abilities中对象的默认配置属性及描述</strong></p><table><thead><tr><th style="text-align:left;">属性</th><th style="text-align:left;">描述</th></tr></thead><tbody><tr><td style="text-align:left;">name</td><td style="text-align:left;">该标签标识当前ability的逻辑名，该名称在整个应用要唯一，标签值采用字符串表示（最大长度127个字节）。</td></tr><tr><td style="text-align:left;">srcEntry</td><td style="text-align:left;">ability的入口代码路径。</td></tr><tr><td style="text-align:left;">description</td><td style="text-align:left;">ability的描述信息。</td></tr><tr><td style="text-align:left;">icon</td><td style="text-align:left;">ability的图标。该标签标识ability图标，标签值为资源文件的索引。该标签可缺省，缺省值为空。如果ability被配置为MainElement，该标签必须配置。</td></tr><tr><td style="text-align:left;">label</td><td style="text-align:left;">ability的标签名。</td></tr><tr><td style="text-align:left;">startWindowIcon</td><td style="text-align:left;">启动页面的图标。</td></tr><tr><td style="text-align:left;">startWindowBackground</td><td style="text-align:left;">启动页面的背景色。</td></tr><tr><td style="text-align:left;">visible</td><td style="text-align:left;">ability是否可以被其他应用程序调用，true表示可以被其它应用调用， false表示不可以被其它应用调用。</td></tr><tr><td style="text-align:left;">skills</td><td style="text-align:left;">标识能够接收的意图的action值的集合，取值通常为系统预定义的action值，也允许自定义。</td></tr><tr><td style="text-align:left;">entities</td><td style="text-align:left;">标识能够接收的Want的Action值的集合，取值通常为系统预定义的action值，也允许自定义。</td></tr><tr><td style="text-align:left;">actions</td><td style="text-align:left;">标识能够接收Want的Entity值的集合。</td></tr></tbody></table><h3 id="config-json-fa-模型" tabindex="-1"><a class="header-anchor" href="#config-json-fa-模型"><span>config.json(FA 模型)</span></a></h3><p><code>entry&gt;src&gt;main&gt;config.json</code> 是 FA 模型模块配置文件，主要包含HAP的配置信息、应用在具体设备上的配置信息以及应用的全局配置信息。</p><h3 id="main-pages-json" tabindex="-1"><a class="header-anchor" href="#main-pages-json"><span>main_pages.json</span></a></h3><p><code>entry/src/main/resources/base/profile/main_pages.json</code>文件保存的是页面page的路径配置信息，所有需要进行路由跳转的page页面都要在这里进行配置。</p><figure><img src="'+b+`" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h3 id="oh-package-json5" tabindex="-1"><a class="header-anchor" href="#oh-package-json5"><span>oh-package.json5</span></a></h3><p>工程级 <code>oh-package.json5</code> 和 模块级 <code>entry/oh-package.json5</code></p><div class="language-json line-numbers-mode" data-ext="json" data-title="json"><pre class="language-json"><code><span class="token comment">///////////工程级</span>
<span class="token punctuation">{</span>
  <span class="token property">&quot;name&quot;</span><span class="token operator">:</span> <span class="token string">&quot;helloWorld&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;version&quot;</span><span class="token operator">:</span> <span class="token string">&quot;1.0.0&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;description&quot;</span><span class="token operator">:</span> <span class="token string">&quot;学习鸿蒙系统之第一课到入门知识&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;main&quot;</span><span class="token operator">:</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;author&quot;</span><span class="token operator">:</span> <span class="token string">&quot;jf&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;license&quot;</span><span class="token operator">:</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;dependencies&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token property">&quot;devDependencies&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token property">&quot;@ohos/hypium&quot;</span><span class="token operator">:</span> <span class="token string">&quot;1.0.6&quot;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token comment">///////////模块级</span>
<span class="token punctuation">{</span>
  <span class="token property">&quot;name&quot;</span><span class="token operator">:</span> <span class="token string">&quot;entry&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;version&quot;</span><span class="token operator">:</span> <span class="token string">&quot;1.0.0&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;description&quot;</span><span class="token operator">:</span> <span class="token string">&quot;学习Helloworld，ArkTS语言，UIAbility的使用。&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;main&quot;</span><span class="token operator">:</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;author&quot;</span><span class="token operator">:</span> <span class="token string">&quot;jf&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;license&quot;</span><span class="token operator">:</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;dependencies&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><table><thead><tr><th>oh-package.json5包含字段</th><th>字段说明</th><th>说明</th></tr></thead><tbody><tr><td>name</td><td>软件包名称</td><td>必选字段，若package.json文件中未指明，需在oh-package.json5添加补齐</td></tr><tr><td>version</td><td>软件包版本</td><td>必选字段，若package.json文件中未指明，需在oh-package.json5添加补齐</td></tr><tr><td>description</td><td>软件包简介</td><td>必选字段，若package.json文件中未指明，需在oh-package.json5添加补齐</td></tr><tr><td>keywords</td><td>软件包关键字</td><td>-</td></tr><tr><td>homepage</td><td>主页链接</td><td>-</td></tr><tr><td>license</td><td>开源协议</td><td>-</td></tr><tr><td>author</td><td>软件包作者</td><td>-</td></tr><tr><td>main</td><td>软件包入口</td><td>-</td></tr><tr><td>repository</td><td>仓库地址</td><td>-</td></tr><tr><td>dependencies</td><td>生产依赖</td><td>该字段处理方式请参阅下方说明内容</td></tr><tr><td>devDependencies</td><td>开发依赖</td><td>-</td></tr><tr><td>types</td><td>类型定义</td><td>-</td></tr><tr><td>artifactType</td><td>共享包类型</td><td>可选项： original：源码，即发布源码(.ts/.ets)。 obfuscation：混淆代码，即源码经过混淆之后发布上传。</td></tr></tbody></table><div class="hint-container info"><p class="hint-container-title">说明</p><ul><li>工程的<em>package.json</em>文件的<em>dependencies</em>字段处理方式如下：</li><li><ul><li><em>@ohos/hypium</em>：测试框架的依赖，迁移时需要放到oh-package.json5文件的devDependencies字段下；</li></ul></li><li><ul><li>删除 <em>@ohos/hvigor</em> 和 <em>@ohos/hvigor-ohos-plugin</em>字段，无需迁移到oh-package.json5中；</li></ul></li><li><ul><li>其他依赖可直接复制到oh-package.json5的dependencies字段中。</li></ul></li><li>除表格中呈现的字段外，package.json中其余字段暂不支持迁移。如您在历史工程中使用到其余字段，请反馈您所使用的字段（选中文本，点击“意见反馈”）。</li></ul></div><h2 id="app-包结构" tabindex="-1"><a class="header-anchor" href="#app-包结构"><span>APP 包结构</span></a></h2><p>Stage 模型和 FA 模型开发的应用，应用程序包结构并不相同</p><p>Entry.hap 相当于window的 <code>.exe</code> 文件</p><p>FeatureX.hap 相当于window的 <code>.dll</code> 文件</p><h3 id="stage-模型" tabindex="-1"><a class="header-anchor" href="#stage-模型"><span>Stage 模型</span></a></h3><ul><li>Stage模型应用程序包结构如下图所示：</li></ul><figure><img src="`+k+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h4 id="arkts-工程目录结构-api-version-8-9" tabindex="-1"><a class="header-anchor" href="#arkts-工程目录结构-api-version-8-9"><span>ArkTS 工程目录结构（API Version 8-9）</span></a></h4><figure><img src="'+v+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>在基于Stage模型开发的应用项目代码下，都存在一个app.json5及一个或多个module.json5这两种配置文件。</p><h3 id="fa-模型" tabindex="-1"><a class="header-anchor" href="#fa-模型"><span>FA 模型</span></a></h3><ul><li>FA模型应用程序包结构如下图所示：</li></ul><figure><img src="'+x+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h4 id="arkts-工程目录结构-api-version-8-9-1" tabindex="-1"><a class="header-anchor" href="#arkts-工程目录结构-api-version-8-9-1"><span>ArkTS 工程目录结构（API Version 8-9）</span></a></h4><p>API Version 8工程目录结构图：</p><figure><img src="'+_+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>API Version 9工程目录结构图：</p><figure><img src="'+j+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><ul><li><p>entry：应用/服务模块，编译构建生成一个HAP。</p></li><li><ul><li><strong>src &gt; main &gt; ets</strong>：用于存放ArkTS源码。</li></ul></li><li><ul><li><strong>src &gt; main &gt; ets &gt; MainAbility</strong>：应用/服务的入口。</li></ul></li><li><ul><li><strong>src &gt; main &gt; ets &gt; MainAbility &gt; pages</strong>：MainAbility包含的页面。</li></ul></li><li><ul><li><strong>src &gt; main &gt; ets &gt; MainAbility &gt; app.ets</strong>：承载Ability生命周期。</li></ul></li><li><ul><li><strong>src &gt; main &gt; resources</strong>：用于存放应用/服务所用到的资源文件，如图形、多媒体、字符串、布局文件等。</li></ul><table><thead><tr><th>资源目录</th><th>资源文件说明</th></tr></thead><tbody><tr><td>base&gt;element</td><td>包括字符串、整型数、颜色、样式等资源的json文件。每个资源均由json格式进行定义，例如： boolean.json：布尔型 color.json：颜色 float.json：浮点型 intarray.json：整型数组 integer.json：整型 pattern.json：样式 plural.json：复数形式 strarray.json：字符串数组 string.json：字符串值</td></tr><tr><td>base&gt;media</td><td>多媒体文件，如图形、视频、音频等文件，支持的文件格式包括：<strong>.png</strong>、<strong>.gif</strong>、<strong>.mp3</strong>、<strong>.mp4</strong>等。</td></tr><tr><td>rawfile</td><td>用于存储任意格式的原始资源文件。rawfile不会根据设备的状态去匹配不同的资源，需要指定文件路径和文件名进行引用。</td></tr></tbody></table></li><li><ul><li><strong>src &gt; main &gt; config.json</strong>：模块配置文件，主要包含HAP的配置信息、应用在具体设备上的配置信息以及应用的全局配置信息。</li></ul></li></ul><h3 id="其他工程目录结构请查看" tabindex="-1"><a class="header-anchor" href="#其他工程目录结构请查看"><span>其他工程目录结构请查看</span></a></h3>',50),J={href:"https://developer.huawei.com/consumer/cn/doc/harmonyos-guides-V2/project_overview-0000001053822398-V2#section1483695981112",target:"_blank",rel:"noopener noreferrer"};function N(U,D){const e=i("ExternalLinkIcon");return l(),r("div",null,[A,t("ul",null,[S,w,t("li",null,[z,n("：是工程的依赖包，存放工程依赖的源文件。关于原npm工程适配OHPM包管理器操作，请参考"),t("a",P,[n("OHPM包管理器"),a(e)]),n("。")]),H,M,V]),I,t("ul",null,[T,t("li",null,[E,n("：用于存放应用/服务所用到的资源文件，如图形、多媒体、字符串、布局文件等。关于资源文件的详细说明请参考"),t("a",F,[n("资源分类与访问"),a(e)]),n("。")])]),W,t("p",null,[t("a",J,[n("其他工程目录结构请查看"),a(e)])])])}const C=o(q,[["render",N],["__file","lesson1-1.html.vue"]]);export{C as default};
